////////////////////////////////////////////////////////////////////////////////
//! \file
//!
//! \author	Mauro Fiorentini
//!
//! \date	10/12/2018
//!
//! \par	Function:
//!	Contains the definitions of inline functions of the
//!	utility_space::ExceptionHandler class.
//!
////////////////////////////////////////////////////////////////////////////////

namespace	utility_space
{

////////////////////////////////////////////////////////////////////////////////
//! \par	Description:
//!	Constructor.
//!
//! \throw	None.
//!
//! \returns	Not applicable.
//!
////////////////////////////////////////////////////////////////////////////////

INLINE	ExceptionHandler::ExceptionHandler(void) noexcept:
		NumericMessage(false)
	{
	}

////////////////////////////////////////////////////////////////////////////////
//! \par	Description:
//!	Destructor.
//!
//! \throw	None.
//!
//! \returns	Not applicable.
//!
////////////////////////////////////////////////////////////////////////////////

INLINE	ExceptionHandler::~ExceptionHandler(void) noexcept
	{
	}

////////////////////////////////////////////////////////////////////////////////
//! \par	Description:
//!	Set the error message to verbose or just a number.
//!
//! \param	thisNumericMessage	Boolean value indicating whether the
//!					error message is a simple numeric code.
//!
//! \throw	None.
//!
//! \returns	None.
//!
////////////////////////////////////////////////////////////////////////////////

INLINE	void	ExceptionHandler::SetNumericMessage(bool thisNumericMessage)
			noexcept
	{
	NumericMessage = thisNumericMessage;
	}

////////////////////////////////////////////////////////////////////////////////
//! \par	Description:
//!	Return the reference to the singleton instance of the class.
//!
//! \throw	None.
//!
//! \returns	ExceptionHandler&	Reference to the singleton instance of
//!					the class.
//!
////////////////////////////////////////////////////////////////////////////////

INLINE	ExceptionHandler&	ExceptionHandler::GetInstance(void) noexcept
	{
	return Instance;
	}

}
